{"version":3,"sources":["ts/login-app/removeInputError.ts","ts/login-app/errorTemplate.ts","ts/login-app/showInputErrors.ts","ts/login-app/validate.ts","ts/login-app/submitFunction.ts","ts/login-app/index.ts"],"names":[],"mappings":";;;AAAA,aAAA,SAAgB,EAAiB,GACvB,IAAA,EAAS,EAAE,cACX,EAAQ,EAAO,cAAc,qBAC9B,IAGL,EAAE,UAAU,OAAO,cACnB,EAAO,YAAY,IAPvB,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,sBAAA,EAAA,QAAA,iBAAA;;ACAA,aAAA,SAAgB,EAAc,GACnB,MAAA,uCAAA,OACyB,EAAO,gBAF3C,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,mBAAA,EAAA,QAAA,cAAA;;ACEA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,oBAAA,EAFA,IAAA,EAAA,QAAA,mBAEA,SAAgB,EAAe,GACrB,IAAA,EAAS,EAAQ,cACjB,EAAU,EAAQ,QAAQ,SAAW,gBACrC,GAAW,EAAA,EAAA,eAAc,GAC/B,EAAQ,UAAU,IAAI,cACtB,EAAO,mBAAmB,YAAa,GAL3C,QAAA,eAAA;;ACGA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EALA,IAAM,EAA4C,CAChD,MAAO,wHACP,SAAU,qBAGZ,SAAgB,EAAS,GACjB,IAAA,EAAqB,EAAQ,QAAQ,SACvC,OAAC,EAAU,IAER,EAAU,GAAY,KAAK,EAAQ,OAJ5C,QAAA,SAAA;;ACGA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,QAAA,YAAA,EARA,IAAA,EAAA,QAAA,qBACA,EAAA,QAAA,cAEM,EAA+B,SAAS,cAAc,8BACtD,EAAkC,SAAS,cAAc,iCAI/D,SAAgB,IAOL,OANsB,QAAA,OAAO,KAAM,SAAA,IACnB,EAAA,EAAA,UAAS,KAExB,EAAA,EAAA,gBAAe,KANd,QAAA,OAAS,CAAC,EAAY,GAEnC,QAAA,SAAA;;ACOA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAfA,QAAA,6BACA,QAAA,oCAEA,IAAA,EAAA,QAAA,sBACA,EAAA,QAAA,oBACA,EAAA,QAAA,oBAEM,EAA0B,SAAS,cAAc,6BAIvD,EAAO,iBAAiB,SAAU,SAAA,GAC9B,EAAM,kBACN,EAAA,EAAA,cAEJ,EAAA,OAAO,QAAQ,SAAA,GAAK,OAAA,EAAE,iBAAiB,QAAS,WAAM,OAAA,EAAA,EAAA,kBAAiB","file":"login-app.f178b7f8.js","sourceRoot":"../src","sourcesContent":["export function removeInputError(e: HTMLInputElement): void {\n    const parent = e.parentElement;\n    const error = parent.querySelector('.invalid-feedback');\n    if (!error) {\n        return\n    }\n    e.classList.remove('is-invalid')\n    parent.removeChild(error)\n}","export function inputErrorTpl(message:string):string {\n    return `\n    <div class=\"invalid-feedback\">${message}</div>\n    `\n}\n","import { inputErrorTpl } from \"./errorTemplate\";\n\nexport function showInputError(element: HTMLInputElement): void {\n    const parent = element.parentElement;\n    const message = element.dataset.message || 'Invalid input';\n    const template = inputErrorTpl(message)\n    element.classList.add('is-invalid')\n    parent.insertAdjacentHTML('beforeend', template)\n}","const regExpDic:{email:RegExp, password:RegExp} = {\n  email: /^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{1,5}|[0-9]{1,3})(\\]?)$/,\n  password: /^[0-9a-zA-Z]{4,}$/,\n};\n\nexport function validate(element: HTMLInputElement): boolean {\n  const RegExpName: string = element.dataset.required;\n  if (!regExpDic[RegExpName]) return true;\n  \n  return regExpDic[RegExpName].test(element.value);\n}\n\n","import { showInputError } from \"./showInputErrors\";\nimport { validate } from \"./validate\";\n\nconst inputEmail: HTMLInputElement = document.querySelector('.form-section__input-email');\nconst inputPassword: HTMLInputElement = document.querySelector('.form-section__input-password');\n\nexport const inputs = [inputEmail, inputPassword];\n\nexport function onSubmit(): boolean {\n    const isFormValid: boolean = inputs.some((input => {\n        let isValidInput = validate(input)\n        if (!isValidInput) {\n            showInputError(input)\n        }\n    }))\n    return isFormValid\n}","import '../../sass/login-app.scss';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios';\nimport { removeInputError } from './removeInputError';\nimport { onSubmit } from './submitFunction';\nimport { inputs } from './submitFunction';\n\nconst formEl: HTMLFormElement = document.querySelector('.form-section__login-form');\n\n\n    \nformEl.addEventListener('submit', event => {\n    event.preventDefault()\n    onSubmit()\n})\ninputs.forEach(e => e.addEventListener('focus', () => removeInputError(e)))\n\n\n"]}